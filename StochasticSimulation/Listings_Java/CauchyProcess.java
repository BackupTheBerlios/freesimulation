import java.applet.Applet;
import java.awt.*;
import java.awt.event.*;
import ptplot.*;

public class CauchyProcess extends PlotApplet {
    private static int width=500,height=400;

   
    private double dt=0.01;         // time increment for saving
    private double t_end=100.;
  //private int steps=100;
    public double[] C_simu;  // the array for saving the realization

    /** The main routine for running the program as an application */
    public static void main(String[] args) {
	Applet applet = new CauchyProcess();
	Frame frame = new Frame("Cauchy Process");
	frame.addWindowListener(new WindowAdapter() {  // Handle window close requests
	    public void windowClosing(WindowEvent e) { System.exit(0); } // exit ?!
	});
	frame.setSize(width,height);   // set size of window
	frame.add("Center",applet);    // add applet to the window
	frame.show();                  // display window on screen
	applet.init();                 // start applet
    }

    /** The actual main program, started by a browser or by the main method 
	Calculate a radioactive decay and plot the resulting points using
	the PTPlot classes. Compare with the exact result. */
    public void init() {
	int steps=(int) (t_end/dt) +1;
	C_simu=new double[steps];
	C_simu[0]=0.0;
	
	// Advance : time steps
        for (int t=0; t<t_end; t++) {
	    C_simu[t+1] = C_simu[t] + dt*Math.tan((Math.random()-0.5)*Math.PI);
	    // Generatin of the increment according to the Cauchy distribution
            // The Cauchy rando numbers are generated by the inversion method
	}

	// start anew plot and plot the points
	super.newPlot();
	super.init();
	int t_max=(int) t_end;
	plot().setTitle("Realization of the Cauchy Process");	// Title of plot
	plot().setMarksStyle("none"); // dots, points or various
	plot().setXLabel("time t");   // set the labels of the axes
	plot().setYLabel("x");
	plot().setXRange(0,t_max);    // set the x range
	plot().setGrid(true);  // Grid or not ?
	plot().setYLog(false); // logarithmis plot ?
	plot().setBars(false); // should I use bars ?
	/* // Create the ticks for the axis 
	for (int i=0; i<=t_max; i+=50) {
	    plot().addXTick(Integer.toString(i),i);
	}
	for (int i=0; i<=N_0; i+=100) {
	    plot().addYTick(Integer.toString(i),i);
	    }   */
	// plot the points and connect them
	boolean connect=false;
	for (int t=0; t<t_end; t++) {	    
	    plot().addPoint(0,t,C_simu[t],connect);
	    if (connect==false) connect=true;
	}
    }
}






